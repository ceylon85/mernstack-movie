{"ast":null,"code":"import _slicedToArray from \"/Users/heavenvoice/Desktop/code/mernstack-movie/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/heavenvoice/Desktop/code/mernstack-movie/client/src/components/views/MovieDetail/Sections/Favorite.js\";\nimport React, { useEffect, useState } from 'react';\nimport './favorite.css';\nimport Axios from 'axios';\nimport { Popover } from 'antd';\nimport { IMAGE_BASE_URL } from '../../../Config';\n\nfunction FavoritePage() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Favorites = _useState2[0],\n        setFavorites = _useState2[1];\n\n  useEffect(() => {\n    fetchFavoredMovie();\n  }, []);\n\n  const fetchFavoredMovie = () => {\n    Axios.post('/api/favorite/getFavoredMovie', {\n      userFrom: localStorage.getItem('userId')\n    }).then(response => {\n      if (response.data.success) {\n        setFavorites(response.data.favorites);\n      } else {\n        alert('영화 정보를 가져오는데 실패 했습니다.');\n      }\n    });\n  };\n\n  const onClickDelete = (movieId, userFrom) => {\n    const variables = {\n      movieId,\n      userFrom\n    };\n    Axios.post('/api/favorite/removeFromFavorite', variables).then(response => {\n      if (response.data.success) {\n        fetchFavoredMovie();\n      } else {\n        alert(\"리스트에서 지우는데 실패했습니다.\");\n      }\n    });\n  };\n\n  const renderCards = Favorites.map((favorite, index) => {\n    const content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, favorite.moviePost ? // eslint-disable-next-line jsx-a11y/alt-text\n    React.createElement(\"img\", {\n      src: \"\".concat(IMAGE_BASE_URL, \"w500\").concat(favorite.moviePost),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : \"no image\", \"}\");\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Popover, {\n      content: content,\n      title: \"\".concat(favorite.movieTitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, favorite.movieTitle)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, favorite.movieRunTime, \" mins\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => onClickDelete(favorite.movieId, favorite.userFrom),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Remove\")));\n  });\n  return React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" Favorite Movies \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Movie Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Movie RunTime\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Remove from favorites\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, renderCards)));\n}\n\nexport default FavoritePage;","map":{"version":3,"sources":["/Users/heavenvoice/Desktop/code/mernstack-movie/client/src/components/views/MovieDetail/Sections/Favorite.js"],"names":["React","useEffect","useState","Axios","Popover","IMAGE_BASE_URL","FavoritePage","Favorites","setFavorites","fetchFavoredMovie","post","userFrom","localStorage","getItem","then","response","data","success","favorites","alert","onClickDelete","movieId","variables","renderCards","map","favorite","index","content","moviePost","movieTitle","movieRunTime","width","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './favorite.css';\nimport Axios from 'axios';\nimport { Popover } from 'antd';\nimport { IMAGE_BASE_URL } from '../../../Config';\n\nfunction FavoritePage() {\n\n    const [Favorites, setFavorites] = useState([])\n\n    useEffect(() => {\n\n        fetchFavoredMovie()\n       \n    }, [])\n\n\n    const fetchFavoredMovie = () => {\n        Axios.post('/api/favorite/getFavoredMovie', { userFrom: localStorage.getItem('userId') })\n            .then(response => {\n                if (response.data.success) {\n                    setFavorites(response.data.favorites)\n                } else {\n                    alert('영화 정보를 가져오는데 실패 했습니다.')\n                }\n            })\n    }\n\n\n\n    const onClickDelete = (movieId, userFrom) => {\n\n        const variables = {\n            movieId,\n            userFrom\n        }\n\n        Axios.post('/api/favorite/removeFromFavorite', variables)\n            .then(response => {\n                if (response.data.success) {\n                    fetchFavoredMovie()\n                } else {\n                    alert(\"리스트에서 지우는데 실패했습니다.\")\n                }\n            })\n\n\n    }\n\n\n    const renderCards = Favorites.map((favorite, index) => {\n\n        const content = (\n            <div>\n                {favorite.moviePost ?\n\n                    // eslint-disable-next-line jsx-a11y/alt-text\n                    <img src={`${IMAGE_BASE_URL}w500${favorite.moviePost}`} /> : \"no image\"}\n\n                }\n            </div>\n        )\n\n\n        return <tr key={index}>\n\n            <Popover content={content} title={`${favorite.movieTitle}`} >\n                <td>{favorite.movieTitle}</td>\n            </Popover>\n\n            <td>{favorite.movieRunTime} mins</td>\n            <td><button onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}>Remove</button></td>\n\n        </tr>\n    })\n\n\n\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <h2> Favorite Movies </h2>\n            <hr />\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>Movie Title</th>\n                        <th>Movie RunTime</th>\n                        <td>Remove from favorites</td>\n                    </tr>\n                </thead>\n                <tbody>\n\n\n                    {renderCards}\n\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default FavoritePage"]},"metadata":{},"sourceType":"module"}