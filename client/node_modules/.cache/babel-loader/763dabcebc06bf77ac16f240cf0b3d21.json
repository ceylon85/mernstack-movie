{"ast":null,"code":"import _slicedToArray from \"/Users/heavenvoice/Desktop/code/mernstack-movie/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/heavenvoice/Desktop/code/mernstack-movie/client/src/components/views/MovieDetail/Sections/Comments.js\";\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nconst TextArea = Input.TextArea;\nconst Title = Typography.Title;\n\nfunction Comments(props) {\n  const user = useSelector(state => state.user);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        Comment = _useState2[0],\n        setComment = _useState2[1];\n\n  const handleChange = e => {\n    setComment(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (user.userData && !user.userData.isAuth) {\n      return alert('Please Log in first');\n    }\n\n    const variables = {\n      content: Comment,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    console.log(variables);\n    axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        setComment(\"\");\n        props.refreshFunction(response.data.result);\n      } else {\n        alert('Failed to save Comment');\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Title, {\n    level: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" Share your opinions about \", props.movieTitle, \" \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), console.log(props.CommentLists), props.CommentLists && props.CommentLists.map((comment, index) => !comment.responseTo && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(SingleComment, {\n    comment: comment,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(ReplyComment, {\n    CommentLists: props.CommentLists,\n    postId: props.postId,\n    parentCommentId: comment._id,\n    refreshFunction: props.refreshFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), props.CommentLists && props.CommentLists.length === 0 && React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '200px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Be the first one who shares your thought about this movie\"), React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleChange,\n    value: Comment,\n    placeholder: \"write some comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/heavenvoice/Desktop/code/mernstack-movie/client/src/components/views/MovieDetail/Sections/Comments.js"],"names":["React","useState","Button","Input","Typography","axios","useSelector","SingleComment","ReplyComment","TextArea","Title","Comments","props","user","state","Comment","setComment","handleChange","e","currentTarget","value","onSubmit","preventDefault","userData","isAuth","alert","variables","content","writer","_id","postId","console","log","post","then","response","data","success","refreshFunction","result","movieTitle","CommentLists","map","comment","index","responseTo","length","display","justifyContent","alignItems","height","width","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Input, Typography, } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nconst { TextArea } = Input;\nconst { Title } = Typography;\nfunction Comments(props) {\n    const user = useSelector(state => state.user)\n    const [Comment, setComment] = useState(\"\")\n\n    const handleChange = (e) => {\n        setComment(e.currentTarget.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n        const variables = {\n            content: Comment,\n            writer: user.userData._id,\n            postId: props.postId\n        }\n        console.log(variables)\n\n        axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setComment(\"\")\n                    props.refreshFunction(response.data.result)\n                } else {\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n\n    return (\n        <div>\n            <br />\n            <Title level={3} > Share your opinions about {props.movieTitle} </Title>\n            <hr />\n            {/* Comment Lists  */}\n            {console.log(props.CommentLists)}\n\n            {props.CommentLists && props.CommentLists.map((comment, index) => (\n                (!comment.responseTo &&\n                    <React.Fragment>\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                        <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\n                    </React.Fragment>\n                )\n            ))}\n\n            {props.CommentLists && props.CommentLists.length === 0 &&\n                <div style={{ display: 'flex', justifyContent:'center', alignItems:'center', height:'200px'}} >\n                    Be the first one who shares your thought about this movie\n                </div>\n            }\n\n            {/* Root Comment Form */}\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\n                <TextArea\n                    style={{ width: '100%', borderRadius: '5px' }}\n                    onChange={handleChange}\n                    value={Comment}\n                    placeholder=\"write some comments\"\n                />\n                <br />\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}