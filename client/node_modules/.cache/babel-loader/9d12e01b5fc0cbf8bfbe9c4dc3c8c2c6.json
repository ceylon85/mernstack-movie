{"ast":null,"code":"import _slicedToArray from \"/Users/heavenvoice/Desktop/code/mernstack-movie/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/heavenvoice/Desktop/code/mernstack-movie/client/src/components/views/MovieDetail/Sections/SingleComment.js\";\nimport React, { useState } from 'react';\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislikes from './LikeDislikes';\nconst TextArea = Input.TextArea;\n\nfunction SingleComment(props) {\n  const user = useSelector(state => state.user);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        CommentValue = _useState2[0],\n        setCommentValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        OpenReply = _useState4[0],\n        setOpenReply = _useState4[1];\n\n  const handleChange = e => {\n    setCommentValue(e.currentTarget.value);\n  };\n\n  const openReply = () => {\n    setOpenReply(!OpenReply);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const variables = {\n      writer: user.userData._id,\n      postId: props.postId,\n      responseTo: props.comment._id,\n      content: CommentValue\n    };\n    Axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        setCommentValue(\"\");\n        setOpenReply(!OpenReply);\n        props.refreshFunction(response.data.result);\n      } else {\n        alert('Failed to save Comment');\n      }\n    });\n  };\n\n  const actions = [React.createElement(LikeDislikes, {\n    comment: true,\n    commentId: props.comment._id,\n    userId: localStorage.getItem('userId'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    onClick: openReply,\n    key: \"comment-basic-reply-to\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Reply to \")];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Comment, {\n    actions: actions,\n    author: props.comment.writer.name,\n    avatar: React.createElement(Avatar, {\n      src: props.comment.writer.image,\n      alt: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    content: React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, props.comment.content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), OpenReply && React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleChange,\n    value: CommentValue,\n    placeholder: \"write some comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nexport default SingleComment;","map":{"version":3,"sources":["/Users/heavenvoice/Desktop/code/mernstack-movie/client/src/components/views/MovieDetail/Sections/SingleComment.js"],"names":["React","useState","Comment","Avatar","Button","Input","Axios","useSelector","LikeDislikes","TextArea","SingleComment","props","user","state","CommentValue","setCommentValue","OpenReply","setOpenReply","handleChange","e","currentTarget","value","openReply","onSubmit","preventDefault","variables","writer","userData","_id","postId","responseTo","comment","content","post","then","response","data","success","refreshFunction","result","alert","actions","localStorage","getItem","name","image","display","width","borderRadius","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislikes from './LikeDislikes';\nconst { TextArea } = Input;\nfunction SingleComment(props) {\n    const user = useSelector(state => state.user);\n    const [CommentValue, setCommentValue] = useState(\"\")\n    const [OpenReply, setOpenReply] = useState(false)\n\n    const handleChange = (e) => {\n        setCommentValue(e.currentTarget.value)\n    }\n\n    const openReply = () => {\n        setOpenReply(!OpenReply)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const variables = {\n            writer: user.userData._id,\n            postId: props.postId,\n            responseTo: props.comment._id,\n            content: CommentValue\n        }\n\n\n        Axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setCommentValue(\"\")\n                    setOpenReply(!OpenReply)\n                    props.refreshFunction(response.data.result)\n                } else {\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n\n    const actions = [\n        <LikeDislikes comment commentId={props.comment._id} userId={localStorage.getItem('userId')} />,\n        <span onClick={openReply} key=\"comment-basic-reply-to\">Reply to </span>\n    ]\n\n    return (\n        <div>\n            <Comment\n                actions={actions}\n                author={props.comment.writer.name}\n                avatar={\n                    <Avatar\n                        src={props.comment.writer.image}\n                        alt=\"image\"\n                    />\n                }\n                content={\n                    <p>\n                        {props.comment.content}\n                    </p>\n                }\n            ></Comment>\n\n\n            {OpenReply &&\n                <form style={{ display: 'flex' }} onSubmit={onSubmit}>\n                    <TextArea\n                        style={{ width: '100%', borderRadius: '5px' }}\n                        onChange={handleChange}\n                        value={CommentValue}\n                        placeholder=\"write some comments\"\n                    />\n                    <br />\n                    <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\n                </form>\n            }\n\n        </div>\n    )\n}\n\nexport default SingleComment"]},"metadata":{},"sourceType":"module"}